var direction_scrolling = NONE;var action_character = CHARACTER_STILL;var limitStageX = WEST;var limitStageY = NORTH;// var limitStageX = NONE;// var limitStageY = NONE;function GameManager(){   this.imageManager = null;   this.initGameManager = function()   {      var inS = new Entity(50, 50);      PLANO = new Plano(0, 0, WIDTH, HEIGHT, 900, 650);      // PERSONAJE_PRINCIPAL = new Personaje(50, 50, 28, 42, 50, 60);      PERSONAJE_PRINCIPAL = new Character("personaje.png", 50, 50, 9, 28, 42, 4, 7, 4, 3, 3, 50, 60, arrayPrincipal, inS);            // cargo las imagenes y objetos      gameManager = this;      this.imageManager = new ImageManager().initImageManager();      // Registro los eventos de teclado      document.onkeydown = function(event)      {         gameManager.registerKeyPressDown(event);      }      document.onkeyup = function(event)      {         gameManager.registerKeyPressUp(event);      }      this.imageManager.addImage(new Stage("layer0.png", 0, 0, 4, 900, 650, etapa2));      this.imageManager.addImage(new EntityImage("layer2.png", 0, 0, 1, WIDTH, HEIGHT, PLANO.x, PLANO.y, 3, 3, PLANO.wS, PLANO.hS));      this.imageManager.addImage(new EntityImageScrollChild("mar.png", 0, 0, 2, 900, 320, 2, 2, 1707, 320, EAST));      this.imageManager.addImage(new EntityImageChild("arboles.png", 0, 100, 3, 1707, 320));      this.imageManager.addImage(new Character("personaje.png", 50, 50, 9, 28, 42, 4, 7, 4, 3, 3, 50, 60, arrayPrincipal, inS));      var arrayRoad1 = [300, 600];      this.imageManager.addImage(new Enemy("enemy.png", 0, 50, 5, 48, 48, 1, 12, 4, 2, 2, 70, 70, arrayEnemy, arrayRoad1));      var arrayRoad2 = [50, 400];      this.imageManager.addImage(new Enemy("enemy.png", 0, 200, 6, 48, 48, 1, 12, 4, 2, 2, 70, 70, arrayEnemy, arrayRoad2));      var arrayRoad3 = [100, 500];      this.imageManager.addImage(new Enemy("enemy.png", 0, 300, 7, 48, 48, 1, 12, 4, 2, 2, 70, 70, arrayEnemy, arrayRoad3));      var arrayRoad4 = [600, 800];      this.imageManager.addImage(new Enemy("personaje.png", 0, 400, 8, 28, 42, 4, 7, 4, 4, 4, 70, 70, arrayPrincipal, arrayRoad4));      this.imageManager.addImage(new FpsCore(10, "rgb(255,255,255)"));      this.imageManager.sortImage();      setInterval(function()      {         gameManager.render();      }      , 1000 / MAXFPS);      //                   this.render();      return this;   }   this.render = function()   {      // calculate the time since the last frame      var thisFrame = new Date().getTime();      var dt = (thisFrame - this.lastFrame) / 1000;      this.lastFrame = thisFrame;      dt = 1;      // limpio los contextos canvas      bufferCtx.clearRect(0, 0, bufferCtx.width, bufferCtx.height);      ctx.clearRect(0, 0, canvas.width, canvas.height);      /* Actualizo los datos de las entidades */      for (i = 0; i < this.imageManager.images.length;      i ++ )      {         if (this.imageManager.images[i].update)         {            this.imageManager.images[i].update(dt);         }      }      /* Colisiones */      for(var i = 0; i < this.imageManager.images.length - 1;      i ++ )      {         for(var j = i + 1; j < this.imageManager.images.length;         j ++ )         {            var uno = this.imageManager.images[i];            var otro = this.imageManager.images[j];            if (uno.collision(otro))            {               uno.afterCollision(otro);               otro.afterCollision(uno);            }         }      }      /* Dibujo las entidades */      for (i = 0; i < this.imageManager.images.length;      i ++ )      {         this.imageManager.images[i].draw(bufferCtx, dt);      }      // copy the back buffer to the displayed canvas      ctx.drawImage(buffer, 0, 0);   }   this.registerKeyPressDown = function(event)   {      for (var x = 0; x < this.imageManager.images.length;      x ++ )      {         if (this.imageManager.images[x].keyDown)         {            this.imageManager.images[x].keyDown(event);         }      }   }   this.registerKeyPressUp = function(event)   {      for (var x = 0; x < this.imageManager.images.length;      x ++ )      {         if (this.imageManager.images[x].keyUp)         {            this.imageManager.images[x].keyUp(event);         }      }   }}