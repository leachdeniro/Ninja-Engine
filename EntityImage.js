/*La variable direction_scrolling, es externa porque responde a un evento externo al objeto. Los valores que soporta están definidosen la clase EntiyImageBase valores(NORTH, EAST, SOUTH, WEST, NONE). */function EntityImage(src, x, y, z, widthScroll, heightScroll, xs, ys, xsd, ysd, widthStage, heightStage, update, checkLimitX, checkLimitY){   // Constructor de la clase padre   EntityImageBase.call(this, src, x, y, z, widthScroll, heightScroll, xs, ys, xsd, ysd, widthStage, heightStage, update);   this.checkLimitX = checkLimitX;   this.checkLimitY = checkLimitY;   this.update = function ()   {      //      if ((direction_scrolling == EAST || direction_scrolling == WEST) && limitStageX == NONE ){      //        this.move();      //      }      //      if ((direction_scrolling == SOUTH || direction_scrolling == NORTH) && limitStageY == NONE ){      //        this.move();      //      }      if (this.checkLimitX == false && this.checkLimitY == false)      {         this.move();      }      else      {         if (this.checkLimitX)         {            if ((direction_scrolling == EAST || direction_scrolling == WEST) && limitStageX == NONE )            {               this.move();            }         }         if (this.checkLimitY)         {            if ((direction_scrolling == SOUTH || direction_scrolling == NORTH) && limitStageY == NONE )            {               this.move();            }         }      }   }   /* se desplaza por una imagen   */   this.move = function()   {      switch (direction_scrolling)      {         case NORTH :            if ((this.yScroll - this.yAxisd) >= 0)            {               this.yScroll -= this.yAxisd;            }            else            {               this.yScroll = 0;               limitStageY = NORTH;            }            break;         case EAST :            if ((this.xScroll + this.xAxisd) <= (this.maxWStage - this.xAxisd))            {               this.xScroll += this.xAxisd;            }            else            {               this.xScroll = this.maxWStage;               limitStageX = EAST;            }            break;         case SOUTH :            if ((this.yScroll + this.yAxisd) <= (this.maxHStage - this.yAxisd))            {               this.yScroll += this.yAxisd;            }            else            {               this.yScroll = this.maxHStage;               limitStageY = SOUTH;            }            break;         case WEST :            if ((this.xScroll - this.xAxisd) >= 0)            {               this.xScroll -= this.xAxisd;            }            else            {               this.xScroll = 0;               limitStageX = WEST;            }            break;         default :            break;      }   }      }// Extiendo de EntityEntityImage.prototype = new EntityImageBase();